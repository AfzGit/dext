#!/bin/bash

#-----------------------------------------------------------
#| DEFAULTS                                                |
#-----------------------------------------------------------

dryrun=false
copy=false
unique=false
force=false

#-----------------------------------------------------------
#| FUNCTIONS                                               |
#-----------------------------------------------------------
# Help, MakeList, DryRun, MakeDirs, CopyMove

Help()
{
   echo "Organize files having the same extension in a folder automatically"
   echo
   echo "USAGE:"
   echo "   dext [OPTIONS]"
   echo "   dext [OPTIONS] DIRECTORY"
   echo
   echo "OPTIONS:"
   echo "   -h"
   echo "       Show this help message"
   echo "   -u"
   echo "       Show total Unique extension"
   echo "   -v"
   echo "       Verbose mode"
   echo "   -i"
   echo "       Interactive mode"
   echo "   -c"
   echo "       Copy mode (default is Move)"
   echo "   -d"
   echo "       Dry run"
   echo "   -f"
   echo "       Force move/copy files (no prompts)"
   echo
   echo "EXAMPLES:"
   echo "   dext ~/Downloads/           # Move"
   echo "   dext -i -v -c ~/Downloads/  # Interactive and verbose copy"
   echo "   dext -f ~/Downloads/        # Force move"
   echo "   dext -f -c ~/Downloads/     # Force copy"
   echo "   dext -d ~/Downloads/        # Dry run"
   echo
   echo "CONTRIBUTE:"
   echo "   https://github.com/AfzGit/dext"
}

MakeList()
{
    list=$(ls -1 -p | grep -v / | grep -o -E "\.\w*\$" | sed "s/[\.|_]//g" | xargs -n1 | sort -u | xargs | sed "s# #\n#g")

    # exit on extension-less Directory
    if [[ -z $list ]]; then
        echo "No file extensions detected" && exit
    fi

    # number of list items
    extnum=$(echo "$list" | wc -l)
    # loop range for list
    looplist=$(eval echo "{1..$(echo "$list" | wc -l)}")
    # list in one line [ ... ]
    listinline=$(echo "[$(echo $list | sed "s/\ /,\ /g")]")
}

DryRun()
{
    echo "$listinline"

    for n in $looplist;
    do
        fakeext=$(echo "$list" | sed -n "$n"p)

        echo -e "\n=== $n/$extnum ==="
        echo "-> Making Directory \"$fakeext\""

        ls -1 *."$fakeext"

        if $copy; then
            echo "-> Copying The above files to directory \"$fakeext\""
        else
            echo "-> Moving The above files to directory \"$fakeext\""
        fi
    done
}

MakeDirs()
{
    # make directories for each line of string in list
    for n in $looplist;
    do
        dirname=$(echo "$list" | sed -n "$n"p)
        if ! [[ -d "$dirname" ]]; then
            mkdir $dirname
        else
            echo "  -> Directory exists, skipping \"$dirname\"..."
        fi
    done
}

CopyMove()
{
    # do the copy/move
    for n in $looplist;
    do
        fileext=$(echo "$list" | sed -n "$n"p)
        $cpmv $int $ver -- *."$fileext" "$fileext"
    done
    echo "  -> Finished working on $extnum directories"
}

#-----------------------------------------------------------
#| OPTIONS                                                 |
#-----------------------------------------------------------

# Get the options
while getopts ":hudcivf" option; do
    case $option in
        h) # display Help
            Help
            exit;;
        u) # show number of unique extensions
            unique=true
            ;;
        d) # dry run
            dryrun=true
            ;;
        c) # copy instead of move
            copy=true
            ;;
        i) # run in interactive mode
            int="-i"
            ;;
        v) # run in verbose mode
            ver="-v"
            ;;
        f) # Force copy/move
            force=true
            ;;
        \?) # Invalid option
            echo "Error: Invalid option. Check help 'dext -h'."
            exit;;
    esac
done

#-----------------------------------------------------------
#| MAIN PART OF THE PROGRAM                                |
#-----------------------------------------------------------

# parsing command line DIRECTORY
workingdir="$(echo $@ | grep -o -E "([^-][A-Za-z0-9_]|\.).*\$")"

# cd into provided directory
if [[ -d "$(echo $workingdir)" ]]; then
    cd "$(echo $workingdir)"
elif [[ -z $workingdir ]]; then
    cd .
else
    echo "$workingdir Directory not found" && exit
fi

MakeList

if $force; then

    MakeDirs

    if $copy; then
        cpmv=cp
    else
        cpmv=mv
    fi

    CopyMove

elif $dryrun; then

    DryRun

elif $unique; then

    echo "=== $extnum Unique Extensions in $(pwd) ==="
    echo "$listinline"

# will go here if -c or nothing is provided
else

    echo "=== $extnum Unique Extensions in $(pwd) ==="

    # list of extentions
    echo "$listinline"

    # choice to make directories
    read -p "-> Make $extnum directories of the above extensions? [Y/n] " choice
    if ! [[ -z "$choice" || "$choice" = "Y" || "$choice" = "y" ]]; then
        echo "Stopped" && exit
    fi
    MakeDirs
    echo "  -> Directories made"

    # -c provided? yes then copy else move
    if $copy; then

        # choice to copy
        read -p "-> Copy all files? [Y/n] " choice
        cpmv=cp

    else

        # choice to move
        read -p "-> Move all files? [Y/n] " choice
        cpmv=mv

    fi

    if ! [[ -z "$choice" || "$choice" = "Y" || "$choice" = "y" ]]; then
        echo "Stopped" && exit
    else
        CopyMove
    fi

fi
